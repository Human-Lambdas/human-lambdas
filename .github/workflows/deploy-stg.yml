name: Deploy-Staging-AWS-ElasticBeanstalk
env:
  EB_APPLICATION_NAME       : "human-lambdas"
  EB_ENVIRONMENT_NAME       : "human-lambdas-api-stg"
  AWS_REGION_NAME           : "eu-west-2"
  DEPLOY_PACKAGE_NAME       : "hl-rest-api-${{ github.sha }}.zip"
  EB_PACKAGE_S3_BUCKET_NAME : "hl-rest-api-bundles-stg"

on:
  push:
    branches:
    - develop

jobs:
  containerize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: create dockerrun file
        id: dockerrun_file
        run: ./create-dockerrun.sh
        env:
          DOCKER_REPO: "staging-api"
      - name: Get release version
        id: get_version
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_SHA})
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: hlambdas/staging-api
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,${{ env.RELEASE_VERSION }}"

  create-bundle:
    runs-on: ubuntu-latest
    needs: [containerize]

    steps:
      - name: Git clone our repository
        uses: actions/checkout@v1

      - name: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./  -x  *.git*

      - name: Configure my AWS Credentils
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Copy our Deployment package to S3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME}}/

      - name: Bundle upload complete
        run: echo "bundle successfully uploaded"

  deployment:
    runs-on: ubuntu-latest
    needs: [create-bundle]

    steps:
      - name: Configure my AWS Credentils
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Create new ElasticBeanstalk Applicaiton Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
      - name: Deploy our new Application Version
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"

      - name: Deployed
        run: echo "Deployment was successful"