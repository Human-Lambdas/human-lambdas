name: Copy DB from production to staging
env:
  DB_NAME: "hlambda"
  DB_USERNAME: "hlambda"

on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Copy Production DB to Staging'

jobs:
  migrate-database:
    runs-on: ubuntu-latest

    steps:
      - name: Install postgres
        run: |
          # add the repository
          sudo tee /etc/apt/sources.list.d/pgdg.list <<END
          deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main
          END
          # get the signing key and import it
          wget https://www.postgresql.org/media/keys/ACCC4CF8.asc
          sudo apt-key add ACCC4CF8.asc
          # fetch the metadata from the new repo
          sudo apt-get update
          sudo apt-get install -y postgresql-client-11 libpq-dev
      - name: Drop staging database
        run: PGPASSWORD="${{ secrets.STAGING_DB_PASSWORD }}" dropdb -h "${{ secrets.STAGING_DB_HOST }}" -U ${{ env.DB_USERNAME }} ${{ env.DB_NAME }}

      - name: Create staging database
        run: PGPASSWORD="${{ secrets.STAGING_DB_PASSWORD }}" createdb -h "${{ secrets.STAGING_DB_HOST }}" -U ${{ env.DB_USERNAME }} ${{ env.DB_NAME }}

      - name: Copy database from production to staging
        run: PGPASSWORD="${{ secrets.PRODUCTION_DB_PASSWORD }}" pg_dump -C -h "${{ secrets.PRODUCTION_DB_HOST }}" -U ${{ env.DB_USERNAME }} ${{ env.DB_NAME }} | PGPASSWORD="${{ secrets.STAGING_DB_PASSWORD }}" psql -h "${{ secrets.STAGING_DB_HOST }}" -U ${{ env.DB_USERNAME }} ${{ env.DB_NAME }}
