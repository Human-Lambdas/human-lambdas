name: Python Tests

on: 
  pull_request:    
    branches:
    - master
    - develop   
  push:
    branches:
    - master
    - develop

jobs:

  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10
        env:
          PGDATA: "/var/lib/postgresql/data/pgdata"        
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1
    - name: Dockerize and test
      env:
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        docker build . --file Dockerfile --tag hl_rest_api --build-arg POSTGRES_USER=$POSTGRES_USER --build-arg POSTGRES_DB=$POSTGRES_DB --build-arg POSTGRES_HOST=localhost --build-arg POSTGRES_PORT=5432 --build-arg POSTGRES_PASSWORD=$POSTGRES_PASSWORD --build-arg SECRET_KEY=$SECRET_KEY 
        docker run hl_rest_api python manage.py migrate; python manage.py test

