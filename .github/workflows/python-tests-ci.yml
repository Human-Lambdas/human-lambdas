name: Python Tests

on: 
  pull_request:    
    branches:
    - master
    - develop

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10  
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 'test'
          POSTGRES_DB: postgres
        ports:
        - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 10

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - run: sudo apt-get install libpq-dev
    - run: pip install -r requirements.txt -r requirements-dev.txt
    - uses: pre-commit/action@v2.0.0
      with:
        extra_args: --verbose --all-files
    - name: pytest
      run: |
        set -e -x
        python manage.py migrate
        pytest \
          -n=auto \
          -m "not bucket" \
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: "test"
        POSTGRES_DB: postgres
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        POSTGRES_HOST: localhost
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        SENTRY_KEY: ${{ secrets.SENTRY_KEY }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        DEBUG: True
        APP_URL: https://app.humanlambdas.com/
        SEGMENT_KEY: ${{ secrets.SEGMENT_KEY }}
        NOTIFICATION_ASM_GROUPID: ${{ secrets.NOTIFICATION_ASM_GROUPID }}
        INVITATION_TEMPLATE: "test"
        ACCOUNT_ASM_GROUPID: 10101
        FORGOTTEN_PASSWORD_TEMPLATE: "test"
        API_URL: "http://localhost:8000"
        HL_CLIENT_API_KEY: ${{ secrets.HL_CLIENT_API_KEY }}
        HL_ORG_ID: 61
