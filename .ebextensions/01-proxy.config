files:
  "/etc/nginx/conf.d/proxy.conf":
    mode: "000755"
    owner: root
    group: root
    content: |
      client_max_body_size 50M;
      server_names_hash_bucket_size 512;
      map $http_upgrade $connection_upgrade {
        default        "upgrade";
        ""            "";
      }
      server {
        listen 80;
        server_name api.humanlambas.com human-lambdas-api-stg.eu-west-2.elasticbeanstalk.com;
        gzip on;
            gzip_comp_level 4;
            gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
            set $year $1;
            set $month $2;
            set $day $3;
            set $hour $4;
        }
        access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
        access_log    /var/log/nginx/access.log;
        location /static/ {
            root /var/www/static;
        }
        location / {
            proxy_pass            http://docker;
            proxy_http_version    1.1;
            proxy_set_header    Connection            $connection_upgrade;
            proxy_set_header    Upgrade                $http_upgrade;
            proxy_set_header    Host                $host;
            proxy_set_header    X-Real-IP            $remote_addr;
            proxy_set_header    X-Forwarded-For        $proxy_add_x_forwarded_for;
        }
      }

  "/etc/nginx/nginx.conf":
    mode: "000755"
    owner: root
    group: root
    content: |
      # Elastic Beanstalk Nginx Configuration File

      user  nginx;
      worker_processes  auto;

      error_log  /var/log/nginx/error.log;

      pid        /var/run/nginx.pid;

      events {
          worker_connections  1024;
      }

      http {
          include       /etc/nginx/mime.types;
          default_type  application/octet-stream;

          access_log    /var/log/nginx/access.log;
          log_format  healthd '$msec"$uri"$status"$request_time"$upstream_response_time"$http_x_forwarded_for';

          include       /etc/nginx/conf.d/*.conf;
          include       /etc/nginx/sites-enabled/*;
      }

container_commands:
  nginx_reload:
     command: "sudo service nginx reload"
  nginx_restart:
    command: "sudo service nginx restart"
