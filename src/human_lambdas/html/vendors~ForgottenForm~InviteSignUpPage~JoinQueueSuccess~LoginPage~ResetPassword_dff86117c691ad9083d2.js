(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendors~ForgottenForm~InviteSignUpPage~JoinQueueSuccess~LoginPage~ResetPassword"],{

/***/ "./node_modules/react-google-login/dist/google-login.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-google-login/dist/google-login.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t(__webpack_require__(/*! react */ "./node_modules/react/index.js")):undefined}("undefined"!=typeof self?self:this,(function(e){return o={},t.m=n=[function(t){t.exports=e},function(e,t,n){e.exports=n(2)()},function(e,t,n){"use strict";function o(){}function r(){}var i=n(3);r.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,r,a){if(a!==i){var c=Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw c.name="Invariant Violation",c}}function t(){return e}var n={array:e.isRequired=e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:r,resetWarningCache:o};return n.PropTypes=n}},function(e){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],o=!0,r=!1,i=void 0;try{for(var a,c=e[Symbol.iterator]();!(o=(a=c.next()).done)&&(n.push(a.value),!t||n.length!==t);o=!0);}catch(e){r=!0,i=e}finally{try{o||null==c.return||c.return()}finally{if(r)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){null!=t&&t<=e.length||(t=e.length);for(var n=0,o=Array(t);n<t;n++)o[n]=e[n];return o}function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],o=!0,r=!1,i=void 0;try{for(var a,c=e[Symbol.iterator]();!(o=(a=c.next()).done)&&(n.push(a.value),!t||n.length!==t);o=!0);}catch(e){r=!0,i=e}finally{try{o||null==c.return||c.return()}finally{if(r)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,t){null!=t&&t<=e.length||(t=e.length);for(var n=0,o=Array(t);n<t;n++)o[n]=e[n];return o}function c(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],o=!0,r=!1,i=void 0;try{for(var a,c=e[Symbol.iterator]();!(o=(a=c.next()).done)&&(n.push(a.value),!t||n.length!==t);o=!0);}catch(e){r=!0,i=e}finally{try{o||null==c.return||c.return()}finally{if(r)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return u(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e,t){null!=t&&t<=e.length||(t=e.length);for(var n=0,o=Array(t);n<t;n++)o[n]=e[n];return o}function l(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],o=!0,r=!1,i=void 0;try{for(var a,c=e[Symbol.iterator]();!(o=(a=c.next()).done)&&(n.push(a.value),!t||n.length!==t);o=!0);}catch(e){r=!0,i=e}finally{try{o||null==c.return||c.return()}finally{if(r)throw i}}return n}}(e,t)||function(e,t){if(e){if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(n):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){null!=t&&t<=e.length||(t=e.length);for(var n=0,o=Array(t);n<t;n++)o[n]=e[n];return o}function f(e,t,n,o,r,i){var a=e.getElementsByTagName(t)[0],c=a,u=a;(u=e.createElement(t)).id=n,u.src=o,c&&c.parentNode?c.parentNode.insertBefore(u,c):e.head.appendChild(u),u.onerror=i,u.onload=r}function d(e,t){var n=e.getElementById(t);n&&n.parentNode.removeChild(n)}function p(e){return b.a.createElement("span",{style:{paddingRight:10,fontWeight:500,paddingLeft:e.icon?0:10,paddingTop:10,paddingBottom:10}},e.children)}function g(e){return b.a.createElement("div",{style:{marginRight:10,background:e.active?"#eee":"#fff",padding:10,borderRadius:2}},b.a.createElement("svg",{width:"18",height:"18",xmlns:"http://www.w3.org/2000/svg"},b.a.createElement("g",{fill:"#000",fillRule:"evenodd"},b.a.createElement("path",{d:"M9 3.48c1.69 0 2.83.73 3.48 1.34l2.54-2.48C13.46.89 11.43 0 9 0 5.48 0 2.44 2.02.96 4.96l2.91 2.26C4.6 5.05 6.62 3.48 9 3.48z",fill:"#EA4335"}),b.a.createElement("path",{d:"M17.64 9.2c0-.74-.06-1.28-.19-1.84H9v3.34h4.96c-.1.83-.64 2.08-1.84 2.92l2.84 2.2c1.7-1.57 2.68-3.88 2.68-6.62z",fill:"#4285F4"}),b.a.createElement("path",{d:"M3.88 10.78A5.54 5.54 0 0 1 3.58 9c0-.62.11-1.22.29-1.78L.96 4.96A9.008 9.008 0 0 0 0 9c0 1.45.35 2.82.96 4.04l2.92-2.26z",fill:"#FBBC05"}),b.a.createElement("path",{d:"M9 18c2.43 0 4.47-.8 5.96-2.18l-2.84-2.2c-.76.53-1.78.9-3.12.9-2.38 0-4.4-1.57-5.12-3.74L.97 13.04C2.45 15.98 5.48 18 9 18z",fill:"#34A853"}),b.a.createElement("path",{fill:"none",d:"M0 0h18v18H0z"}))))}function y(e){var t=i(Object(m.useState)(!1),2),n=t[0],o=t[1],r=i(Object(m.useState)(!1),2),a=r[0],c=r[1],u=e.tag,l=e.type,s=e.className,f=e.disabledStyle,d=e.buttonText,y=e.children,v=e.render,S=e.theme,j=e.icon,O=e.disabled,x=h({onSuccess:e.onSuccess,onAutoLoadFinished:e.onAutoLoadFinished,onRequest:e.onRequest,onFailure:e.onFailure,onScriptLoadFailure:e.onScriptLoadFailure,clientId:e.clientId,cookiePolicy:e.cookiePolicy,loginHint:e.loginHint,hostedDomain:e.hostedDomain,autoLoad:e.autoLoad,isSignedIn:e.isSignedIn,fetchBasicProfile:e.fetchBasicProfile,redirectUri:e.redirectUri,discoveryDocs:e.discoveryDocs,uxMode:e.uxMode,scope:e.scope,accessType:e.accessType,responseType:e.responseType,jsSrc:e.jsSrc,prompt:e.prompt}),I=x.signIn,w=O||!x.loaded;if(v)return v({onClick:I,disabled:w});var k={backgroundColor:"dark"===S?"rgb(66, 133, 244)":"#fff",display:"inline-flex",alignItems:"center",color:"dark"===S?"#fff":"rgba(0, 0, 0, .54)",boxShadow:"0 2px 2px 0 rgba(0, 0, 0, .24), 0 0 1px 0 rgba(0, 0, 0, .24)",padding:0,borderRadius:2,border:"1px solid transparent",fontSize:14,fontWeight:"500",fontFamily:"Roboto, sans-serif"},A={cursor:"pointer",backgroundColor:"dark"===S?"#3367D6":"#eee",color:"dark"===S?"#fff":"rgba(0, 0, 0, .54)",opacity:1},_=w?Object.assign({},k,f):a?Object.assign({},k,A):n?Object.assign({},k,{cursor:"pointer",opacity:.9}):k;return b.a.createElement(u,{onMouseEnter:function(){return o(!0)},onMouseLeave:function(){o(!1),c(!1)},onMouseDown:function(){return c(!0)},onMouseUp:function(){return c(!1)},onClick:I,style:_,type:l,disabled:w,className:s},[j&&b.a.createElement(g,{key:1,active:a}),b.a.createElement(p,{icon:j,key:2},y||d)])}n.r(t),n.d(t,"default",(function(){return S})),n.d(t,"GoogleLogin",(function(){return S})),n.d(t,"GoogleLogout",(function(){return O})),n.d(t,"useGoogleLogin",(function(){return h})),n.d(t,"useGoogleLogout",(function(){return j}));var m=n(0),b=n.n(m),h=(n(1),function(e){function t(e){var t=e.getBasicProfile(),n=e.getAuthResponse(!0);e.googleId=t.getId(),e.tokenObj=n,e.tokenId=n.id_token,e.accessToken=n.access_token,e.profileObj={googleId:t.getId(),imageUrl:t.getImageUrl(),email:t.getEmail(),name:t.getName(),givenName:t.getGivenName(),familyName:t.getFamilyName()},i(e)}function n(e){if(e&&e.preventDefault(),P){var n=window.gapi.auth2.getAuthInstance(),o={prompt:L};p(),"code"===_?n.grantOfflineAccess(o).then((function(e){return i(e)}),(function(e){return l(e)})):n.signIn(o).then((function(e){return t(e)}),(function(e){return l(e)}))}}var r=e.onSuccess,i=void 0===r?function(){}:r,a=e.onAutoLoadFinished,c=void 0===a?function(){}:a,u=e.onFailure,l=void 0===u?function(){}:u,s=e.onRequest,p=void 0===s?function(){}:s,g=e.onScriptLoadFailure,y=e.clientId,b=e.cookiePolicy,h=e.loginHint,v=e.hostedDomain,S=e.autoLoad,j=e.isSignedIn,O=e.fetchBasicProfile,x=e.redirectUri,I=e.discoveryDocs,w=e.uxMode,k=e.scope,A=e.accessType,_=e.responseType,E=e.jsSrc,T=void 0===E?"https://apis.google.com/js/api.js":E,L=e.prompt,M=o(Object(m.useState)(!1),2),P=M[0],C=M[1];return Object(m.useEffect)((function(){var e=!1,n=g||l;return f(document,"script","google-login",T,(function(){var o={client_id:y,cookie_policy:b,login_hint:h,hosted_domain:v,fetch_basic_profile:O,discoveryDocs:I,ux_mode:w,redirect_uri:x,scope:k,access_type:A};"code"===_&&(o.access_type="offline"),window.gapi.load("auth2",(function(){var r=window.gapi.auth2.getAuthInstance();r?r.then((function(){e||(j&&r.isSignedIn.get()?(C(!0),c(!0),t(r.currentUser.get())):(C(!0),c(!1)))}),(function(e){l(e)})):window.gapi.auth2.init(o).then((function(n){if(!e){C(!0);var o=j&&n.isSignedIn.get();c(o),o&&t(n.currentUser.get())}}),(function(e){C(!0),c(!1),n(e)}))}))}),(function(e){n(e)})),function(){e=!0,d(document,"google-login")}}),[]),Object(m.useEffect)((function(){S&&n()}),[P]),{signIn:n,loaded:P}});function v(e){var t=l(Object(m.useState)(!1),2),n=t[0],o=t[1],r=l(Object(m.useState)(!1),2),i=r[0],a=r[1],c=e.tag,u=e.type,s=e.className,f=e.disabledStyle,d=e.buttonText,y=e.children,h=e.render,v=e.theme,S=e.icon,O=e.disabled,x=j({jsSrc:e.jsSrc,onFailure:e.onFailure,onScriptLoadFailure:e.onScriptLoadFailure,clientId:e.clientId,cookiePolicy:e.cookiePolicy,loginHint:e.loginHint,hostedDomain:e.hostedDomain,fetchBasicProfile:e.fetchBasicProfile,discoveryDocs:e.discoveryDocs,uxMode:e.uxMode,redirectUri:e.redirectUri,scope:e.scope,accessType:e.accessType,onLogoutSuccess:e.onLogoutSuccess}),I=x.signOut,w=O||!x.loaded;if(h)return h({onClick:I,disabled:w});var k={backgroundColor:"dark"===v?"rgb(66, 133, 244)":"#fff",display:"inline-flex",alignItems:"center",color:"dark"===v?"#fff":"rgba(0, 0, 0, .54)",boxShadow:"0 2px 2px 0 rgba(0, 0, 0, .24), 0 0 1px 0 rgba(0, 0, 0, .24)",padding:0,borderRadius:2,border:"1px solid transparent",fontSize:14,fontWeight:"500",fontFamily:"Roboto, sans-serif"},A={cursor:"pointer",backgroundColor:"dark"===v?"#3367D6":"#eee",color:"dark"===v?"#fff":"rgba(0, 0, 0, .54)",opacity:1},_=w?Object.assign({},k,f):i?Object.assign({},k,A):n?Object.assign({},k,{cursor:"pointer",opacity:.9}):k;return b.a.createElement(c,{onMouseEnter:function(){return o(!0)},onMouseLeave:function(){o(!1),a(!1)},onMouseDown:function(){return a(!0)},onMouseUp:function(){return a(!1)},onClick:I,style:_,type:u,disabled:w,className:s},[S&&b.a.createElement(g,{key:1,active:i}),b.a.createElement(p,{icon:S,key:2},y||d)])}y.defaultProps={type:"button",tag:"button",buttonText:"Sign in with Google",scope:"profile email",accessType:"online",prompt:"",cookiePolicy:"single_host_origin",fetchBasicProfile:!0,isSignedIn:!1,uxMode:"popup",disabledStyle:{opacity:.6},icon:!0,theme:"light",onRequest:function(){}};var S=y,j=function(e){var t=e.jsSrc,n=void 0===t?"https://apis.google.com/js/api.js":t,o=e.onFailure,r=e.onScriptLoadFailure,i=e.clientId,a=e.cookiePolicy,u=e.loginHint,l=e.hostedDomain,s=e.fetchBasicProfile,p=e.discoveryDocs,g=e.uxMode,y=e.redirectUri,b=e.scope,h=e.accessType,v=e.onLogoutSuccess,S=c(Object(m.useState)(!1),2),j=S[0],O=S[1],x=Object(m.useCallback)((function(){if(window.gapi){var e=window.gapi.auth2.getAuthInstance();null!=e&&e.then((function(){e.signOut().then((function(){e.disconnect(),v()}))}),(function(e){return o(e)}))}}),[v]);return Object(m.useEffect)((function(){var e=r||o;return f(document,"script","google-login",n,(function(){var t={client_id:i,cookie_policy:a,login_hint:u,hosted_domain:l,fetch_basic_profile:s,discoveryDocs:p,ux_mode:g,redirect_uri:y,scope:b,access_type:h};window.gapi.load("auth2",(function(){window.gapi.auth2.getAuthInstance()?O(!0):window.gapi.auth2.init(t).then((function(){return O(!0)}),(function(t){return e(t)}))}))}),(function(t){e(t)})),function(){d(document,"google-login")}}),[]),{signOut:x,loaded:j}};v.defaultProps={type:"button",tag:"button",buttonText:"Logout of Google",disabledStyle:{opacity:.6},icon:!0,theme:"light",jsSrc:"https://apis.google.com/js/api.js"};var O=v}],t.c=o,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)t.d(o,r,function(t){return e[t]}.bind(null,r));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=4);function t(e){if(o[e])return o[e].exports;var r=o[e]={i:e,l:!1,exports:{}};return n[e].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n,o}));

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZ29vZ2xlLWxvZ2luL2Rpc3QvZ29vZ2xlLWxvZ2luLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLGVBQWUsS0FBaUQsa0JBQWtCLG1CQUFPLENBQUMsNENBQU8sR0FBRyxTQUFtSixDQUFDLGlEQUFpRCxXQUFXLG9CQUFvQixZQUFZLGlCQUFpQixpQkFBaUIsaUJBQWlCLGFBQWEsY0FBYyxjQUFjLFdBQVcsMkNBQTJDLHdCQUF3QixVQUFVLCtMQUErTCxzQ0FBc0MsYUFBYSxTQUFTLE9BQU8sd05BQXdOLHNCQUFzQixhQUFhLGFBQWEseURBQXlELGlCQUFpQixhQUFhLGdCQUFnQixtQkFBbUIsNkJBQTZCLG1CQUFtQiw2REFBNkQsNEJBQTRCLElBQUksaUNBQWlDLDJEQUEyRCxPQUFPLFNBQVMsU0FBUyxRQUFRLElBQUksOEJBQThCLFFBQVEsY0FBYyxVQUFVLHFCQUFxQixNQUFNLG9DQUFvQyxvREFBb0QsZ0xBQWdMLGtCQUFrQixpS0FBaUssR0FBRyxnQkFBZ0IsbUNBQW1DLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxnQkFBZ0IsbUJBQW1CLDZCQUE2QixtQkFBbUIsNkRBQTZELDRCQUE0QixJQUFJLGlDQUFpQywyREFBMkQsT0FBTyxTQUFTLFNBQVMsUUFBUSxJQUFJLDhCQUE4QixRQUFRLGNBQWMsVUFBVSxxQkFBcUIsTUFBTSxvQ0FBb0Msb0RBQW9ELGdMQUFnTCxrQkFBa0IsaUtBQWlLLEdBQUcsZ0JBQWdCLG1DQUFtQyx1QkFBdUIsSUFBSSxjQUFjLFNBQVMsZ0JBQWdCLG1CQUFtQiw2QkFBNkIsbUJBQW1CLDZEQUE2RCw0QkFBNEIsSUFBSSxpQ0FBaUMsMkRBQTJELE9BQU8sU0FBUyxTQUFTLFFBQVEsSUFBSSw4QkFBOEIsUUFBUSxjQUFjLFVBQVUscUJBQXFCLE1BQU0sb0NBQW9DLG9EQUFvRCxnTEFBZ0wsa0JBQWtCLGlLQUFpSyxHQUFHLGdCQUFnQixtQ0FBbUMsdUJBQXVCLElBQUksY0FBYyxTQUFTLGdCQUFnQixtQkFBbUIsNkJBQTZCLG1CQUFtQiw2REFBNkQsNEJBQTRCLElBQUksaUNBQWlDLDJEQUEyRCxPQUFPLFNBQVMsU0FBUyxRQUFRLElBQUksOEJBQThCLFFBQVEsY0FBYyxVQUFVLHFCQUFxQixNQUFNLG9DQUFvQyxvREFBb0QsZ0xBQWdMLGtCQUFrQixpS0FBaUssR0FBRyxnQkFBZ0IsbUNBQW1DLHVCQUF1QixJQUFJLGNBQWMsU0FBUyx3QkFBd0IsMkNBQTJDLGdJQUFnSSxnQkFBZ0IsMEJBQTBCLCtCQUErQixjQUFjLGlDQUFpQyxPQUFPLHVGQUF1RixhQUFhLGNBQWMsZ0NBQWdDLE9BQU8sNEVBQTRFLDBCQUEwQiwwREFBMEQsd0JBQXdCLCtCQUErQiwyQkFBMkIsaUpBQWlKLDRCQUE0QixtSUFBbUksNEJBQTRCLDZJQUE2SSw0QkFBNEIsK0lBQStJLDRCQUE0Qiw4QkFBOEIsS0FBSyxjQUFjLHlOQUF5TixnZkFBZ2YsNEJBQTRCLGVBQWUscUJBQXFCLEVBQUUsT0FBTywyVUFBMlUsSUFBSSxvSEFBb0gscUJBQXFCLHdCQUF3Qix3QkFBd0IsSUFBSSw0QkFBNEIsSUFBSSw0QkFBNEIsd0JBQXdCLGFBQWEseUJBQXlCLFlBQVksd0JBQXdCLGFBQWEsc0JBQXNCLGFBQWEsaURBQWlELDBCQUEwQixlQUFlLHVCQUF1QixhQUFhLFNBQVMsbUNBQW1DLFNBQVMsbUNBQW1DLFNBQVMsb0NBQW9DLFNBQVMsc0NBQXNDLFNBQVMsdUNBQXVDLFNBQVMsR0FBRyx3Q0FBd0MsY0FBYyxrREFBa0Qsa0dBQWtHLHdJQUF3SSxNQUFNLGNBQWMsNEJBQTRCLDZDQUE2QyxVQUFVLHlEQUF5RCxZQUFZLGVBQWUsWUFBWSxpQ0FBaUMsWUFBWSxlQUFlLFlBQVksSUFBSSwyQ0FBMkMsbURBQW1ELDBDQUEwQywwQ0FBMEMscVZBQXFWLHVDQUF1QyxnQkFBZ0Isd0RBQXdELE9BQU8sK0lBQStJLDJFQUEyRSwwQ0FBMEMscUJBQXFCLDhFQUE4RSxlQUFlLEtBQUssK0NBQStDLE9BQU8sTUFBTSw0QkFBNEIsZ0NBQWdDLGVBQWUsaUJBQWlCLEdBQUcsR0FBRyxlQUFlLEtBQUssY0FBYyxpQ0FBaUMsc0NBQXNDLE9BQU8sUUFBUSxtQkFBbUIsRUFBRSxjQUFjLHlOQUF5TixzV0FBc1csNkJBQTZCLGVBQWUscUJBQXFCLEVBQUUsT0FBTywyVUFBMlUsSUFBSSxvSEFBb0gscUJBQXFCLHdCQUF3Qix3QkFBd0IsSUFBSSw0QkFBNEIsSUFBSSw0QkFBNEIsd0JBQXdCLGFBQWEseUJBQXlCLFlBQVksd0JBQXdCLGFBQWEsc0JBQXNCLGFBQWEsaURBQWlELDBCQUEwQixlQUFlLHVCQUF1QixhQUFhLFNBQVMsZ0JBQWdCLG1OQUFtTixXQUFXLCtDQUErQyxzQkFBc0Isb1dBQW9XLGdCQUFnQiwwQ0FBMEMsNEJBQTRCLDZCQUE2QixtQkFBbUIsR0FBRyxlQUFlLFlBQVksSUFBSSxPQUFPLHVDQUF1QyxXQUFXLHdEQUF3RCxPQUFPLCtJQUErSSxxQ0FBcUMscUZBQXFGLGFBQWEsZUFBZSxZQUFZLEdBQUcsR0FBRyxlQUFlLEtBQUssY0FBYyw0QkFBNEIsT0FBTyxxQkFBcUIsZ0JBQWdCLHdFQUF3RSxXQUFXLGtFQUFrRSxRQUFRLDRCQUE0QixxQ0FBcUMsb0JBQW9CLEVBQUUsaUJBQWlCLDRGQUE0RixlQUFlLHdDQUF3QyxTQUFTLEVBQUUsbUJBQW1CLDhCQUE4QixxREFBcUQsMEJBQTBCLDZDQUE2QyxzQkFBc0IsNkRBQTZELFlBQVksZUFBZSxTQUFTLGlCQUFpQixpQ0FBaUMsaUJBQWlCLFlBQVksVUFBVSxzQkFBc0IsbUJBQW1CLGlEQUFpRCxpQkFBaUIsY0FBYyw0QkFBNEIsWUFBWSxxQkFBcUIsMkRBQTJELFFBQVEsRyIsImZpbGUiOiJ2ZW5kb3JzfkZvcmdvdHRlbkZvcm1+SW52aXRlU2lnblVwUGFnZX5Kb2luUXVldWVTdWNjZXNzfkxvZ2luUGFnZX5SZXNldFBhc3N3b3JkX2RmZjg2MTE3YzY5MWFkOTA4M2QyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIWZ1bmN0aW9uKGUsdCl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9dChyZXF1aXJlKFwicmVhY3RcIikpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW1wicmVhY3RcIl0sdCk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5Hb29nbGVMb2dpbj10KHJlcXVpcmUoXCJyZWFjdFwiKSk6ZS5Hb29nbGVMb2dpbj10KGUucmVhY3QpfShcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsKGZ1bmN0aW9uKGUpe3JldHVybiBvPXt9LHQubT1uPVtmdW5jdGlvbih0KXt0LmV4cG9ydHM9ZX0sZnVuY3Rpb24oZSx0LG4pe2UuZXhwb3J0cz1uKDIpKCl9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBvKCl7fWZ1bmN0aW9uIHIoKXt9dmFyIGk9bigzKTtyLnJlc2V0V2FybmluZ0NhY2hlPW8sZS5leHBvcnRzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQsbixvLHIsYSl7aWYoYSE9PWkpe3ZhciBjPUVycm9yKFwiQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlc1wiKTt0aHJvdyBjLm5hbWU9XCJJbnZhcmlhbnQgVmlvbGF0aW9uXCIsY319ZnVuY3Rpb24gdCgpe3JldHVybiBlfXZhciBuPXthcnJheTplLmlzUmVxdWlyZWQ9ZSxib29sOmUsZnVuYzplLG51bWJlcjplLG9iamVjdDplLHN0cmluZzplLHN5bWJvbDplLGFueTplLGFycmF5T2Y6dCxlbGVtZW50OmUsZWxlbWVudFR5cGU6ZSxpbnN0YW5jZU9mOnQsbm9kZTplLG9iamVjdE9mOnQsb25lT2Y6dCxvbmVPZlR5cGU6dCxzaGFwZTp0LGV4YWN0OnQsY2hlY2tQcm9wVHlwZXM6cixyZXNldFdhcm5pbmdDYWNoZTpvfTtyZXR1cm4gbi5Qcm9wVHlwZXM9bn19LGZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO2UuZXhwb3J0cz1cIlNFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEXCJ9LGZ1bmN0aW9uKGUsdCxuKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBvKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9KGUpfHxmdW5jdGlvbihlLHQpe2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoZSkpe3ZhciBuPVtdLG89ITAscj0hMSxpPXZvaWQgMDt0cnl7Zm9yKHZhciBhLGM9ZVtTeW1ib2wuaXRlcmF0b3JdKCk7IShvPShhPWMubmV4dCgpKS5kb25lKSYmKG4ucHVzaChhLnZhbHVlKSwhdHx8bi5sZW5ndGghPT10KTtvPSEwKTt9Y2F0Y2goZSl7cj0hMCxpPWV9ZmluYWxseXt0cnl7b3x8bnVsbD09Yy5yZXR1cm58fGMucmV0dXJuKCl9ZmluYWxseXtpZihyKXRocm93IGl9fXJldHVybiBufX0oZSx0KXx8ZnVuY3Rpb24oZSx0KXtpZihlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gcihlLHQpO3ZhciBuPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTtyZXR1cm5cIk9iamVjdFwiPT09biYmZS5jb25zdHJ1Y3RvciYmKG49ZS5jb25zdHJ1Y3Rvci5uYW1lKSxcIk1hcFwiPT09bnx8XCJTZXRcIj09PW4/QXJyYXkuZnJvbShuKTpcIkFyZ3VtZW50c1wiPT09bnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3Qobik/cihlLHQpOnZvaWQgMH19KGUsdCl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKX1mdW5jdGlvbiByKGUsdCl7bnVsbCE9dCYmdDw9ZS5sZW5ndGh8fCh0PWUubGVuZ3RoKTtmb3IodmFyIG49MCxvPUFycmF5KHQpO248dDtuKyspb1tuXT1lW25dO3JldHVybiBvfWZ1bmN0aW9uIGkoZSx0KXtyZXR1cm4gZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oZSl8fGZ1bmN0aW9uKGUsdCl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChlKSl7dmFyIG49W10sbz0hMCxyPSExLGk9dm9pZCAwO3RyeXtmb3IodmFyIGEsYz1lW1N5bWJvbC5pdGVyYXRvcl0oKTshKG89KGE9Yy5uZXh0KCkpLmRvbmUpJiYobi5wdXNoKGEudmFsdWUpLCF0fHxuLmxlbmd0aCE9PXQpO289ITApO31jYXRjaChlKXtyPSEwLGk9ZX1maW5hbGx5e3RyeXtvfHxudWxsPT1jLnJldHVybnx8Yy5yZXR1cm4oKX1maW5hbGx5e2lmKHIpdGhyb3cgaX19cmV0dXJuIG59fShlLHQpfHxmdW5jdGlvbihlLHQpe2lmKGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKXJldHVybiBhKGUsdCk7dmFyIG49T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpLnNsaWNlKDgsLTEpO3JldHVyblwiT2JqZWN0XCI9PT1uJiZlLmNvbnN0cnVjdG9yJiYobj1lLmNvbnN0cnVjdG9yLm5hbWUpLFwiTWFwXCI9PT1ufHxcIlNldFwiPT09bj9BcnJheS5mcm9tKG4pOlwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKT9hKGUsdCk6dm9pZCAwfX0oZSx0KXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfSgpfWZ1bmN0aW9uIGEoZSx0KXtudWxsIT10JiZ0PD1lLmxlbmd0aHx8KHQ9ZS5sZW5ndGgpO2Zvcih2YXIgbj0wLG89QXJyYXkodCk7bjx0O24rKylvW25dPWVbbl07cmV0dXJuIG99ZnVuY3Rpb24gYyhlLHQpe3JldHVybiBmdW5jdGlvbihlKXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiBlfShlKXx8ZnVuY3Rpb24oZSx0KXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGUpKXt2YXIgbj1bXSxvPSEwLHI9ITEsaT12b2lkIDA7dHJ5e2Zvcih2YXIgYSxjPWVbU3ltYm9sLml0ZXJhdG9yXSgpOyEobz0oYT1jLm5leHQoKSkuZG9uZSkmJihuLnB1c2goYS52YWx1ZSksIXR8fG4ubGVuZ3RoIT09dCk7bz0hMCk7fWNhdGNoKGUpe3I9ITAsaT1lfWZpbmFsbHl7dHJ5e298fG51bGw9PWMucmV0dXJufHxjLnJldHVybigpfWZpbmFsbHl7aWYocil0aHJvdyBpfX1yZXR1cm4gbn19KGUsdCl8fGZ1bmN0aW9uKGUsdCl7aWYoZSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUpcmV0dXJuIHUoZSx0KTt2YXIgbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSkuc2xpY2UoOCwtMSk7cmV0dXJuXCJPYmplY3RcIj09PW4mJmUuY29uc3RydWN0b3ImJihuPWUuY29uc3RydWN0b3IubmFtZSksXCJNYXBcIj09PW58fFwiU2V0XCI9PT1uP0FycmF5LmZyb20obik6XCJBcmd1bWVudHNcIj09PW58fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pP3UoZSx0KTp2b2lkIDB9fShlLHQpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCl9ZnVuY3Rpb24gdShlLHQpe251bGwhPXQmJnQ8PWUubGVuZ3RofHwodD1lLmxlbmd0aCk7Zm9yKHZhciBuPTAsbz1BcnJheSh0KTtuPHQ7bisrKW9bbl09ZVtuXTtyZXR1cm4gb31mdW5jdGlvbiBsKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGV9KGUpfHxmdW5jdGlvbihlLHQpe2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoZSkpe3ZhciBuPVtdLG89ITAscj0hMSxpPXZvaWQgMDt0cnl7Zm9yKHZhciBhLGM9ZVtTeW1ib2wuaXRlcmF0b3JdKCk7IShvPShhPWMubmV4dCgpKS5kb25lKSYmKG4ucHVzaChhLnZhbHVlKSwhdHx8bi5sZW5ndGghPT10KTtvPSEwKTt9Y2F0Y2goZSl7cj0hMCxpPWV9ZmluYWxseXt0cnl7b3x8bnVsbD09Yy5yZXR1cm58fGMucmV0dXJuKCl9ZmluYWxseXtpZihyKXRocm93IGl9fXJldHVybiBufX0oZSx0KXx8ZnVuY3Rpb24oZSx0KXtpZihlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gcyhlLHQpO3ZhciBuPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKS5zbGljZSg4LC0xKTtyZXR1cm5cIk9iamVjdFwiPT09biYmZS5jb25zdHJ1Y3RvciYmKG49ZS5jb25zdHJ1Y3Rvci5uYW1lKSxcIk1hcFwiPT09bnx8XCJTZXRcIj09PW4/QXJyYXkuZnJvbShuKTpcIkFyZ3VtZW50c1wiPT09bnx8L14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3Qobik/cyhlLHQpOnZvaWQgMH19KGUsdCl8fGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKX0oKX1mdW5jdGlvbiBzKGUsdCl7bnVsbCE9dCYmdDw9ZS5sZW5ndGh8fCh0PWUubGVuZ3RoKTtmb3IodmFyIG49MCxvPUFycmF5KHQpO248dDtuKyspb1tuXT1lW25dO3JldHVybiBvfWZ1bmN0aW9uIGYoZSx0LG4sbyxyLGkpe3ZhciBhPWUuZ2V0RWxlbWVudHNCeVRhZ05hbWUodClbMF0sYz1hLHU9YTsodT1lLmNyZWF0ZUVsZW1lbnQodCkpLmlkPW4sdS5zcmM9byxjJiZjLnBhcmVudE5vZGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh1LGMpOmUuaGVhZC5hcHBlbmRDaGlsZCh1KSx1Lm9uZXJyb3I9aSx1Lm9ubG9hZD1yfWZ1bmN0aW9uIGQoZSx0KXt2YXIgbj1lLmdldEVsZW1lbnRCeUlkKHQpO24mJm4ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChuKX1mdW5jdGlvbiBwKGUpe3JldHVybiBiLmEuY3JlYXRlRWxlbWVudChcInNwYW5cIix7c3R5bGU6e3BhZGRpbmdSaWdodDoxMCxmb250V2VpZ2h0OjUwMCxwYWRkaW5nTGVmdDplLmljb24/MDoxMCxwYWRkaW5nVG9wOjEwLHBhZGRpbmdCb3R0b206MTB9fSxlLmNoaWxkcmVuKX1mdW5jdGlvbiBnKGUpe3JldHVybiBiLmEuY3JlYXRlRWxlbWVudChcImRpdlwiLHtzdHlsZTp7bWFyZ2luUmlnaHQ6MTAsYmFja2dyb3VuZDplLmFjdGl2ZT9cIiNlZWVcIjpcIiNmZmZcIixwYWRkaW5nOjEwLGJvcmRlclJhZGl1czoyfX0sYi5hLmNyZWF0ZUVsZW1lbnQoXCJzdmdcIix7d2lkdGg6XCIxOFwiLGhlaWdodDpcIjE4XCIseG1sbnM6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifSxiLmEuY3JlYXRlRWxlbWVudChcImdcIix7ZmlsbDpcIiMwMDBcIixmaWxsUnVsZTpcImV2ZW5vZGRcIn0sYi5hLmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2Q6XCJNOSAzLjQ4YzEuNjkgMCAyLjgzLjczIDMuNDggMS4zNGwyLjU0LTIuNDhDMTMuNDYuODkgMTEuNDMgMCA5IDAgNS40OCAwIDIuNDQgMi4wMi45NiA0Ljk2bDIuOTEgMi4yNkM0LjYgNS4wNSA2LjYyIDMuNDggOSAzLjQ4elwiLGZpbGw6XCIjRUE0MzM1XCJ9KSxiLmEuY3JlYXRlRWxlbWVudChcInBhdGhcIix7ZDpcIk0xNy42NCA5LjJjMC0uNzQtLjA2LTEuMjgtLjE5LTEuODRIOXYzLjM0aDQuOTZjLS4xLjgzLS42NCAyLjA4LTEuODQgMi45MmwyLjg0IDIuMmMxLjctMS41NyAyLjY4LTMuODggMi42OC02LjYyelwiLGZpbGw6XCIjNDI4NUY0XCJ9KSxiLmEuY3JlYXRlRWxlbWVudChcInBhdGhcIix7ZDpcIk0zLjg4IDEwLjc4QTUuNTQgNS41NCAwIDAgMSAzLjU4IDljMC0uNjIuMTEtMS4yMi4yOS0xLjc4TC45NiA0Ljk2QTkuMDA4IDkuMDA4IDAgMCAwIDAgOWMwIDEuNDUuMzUgMi44Mi45NiA0LjA0bDIuOTItMi4yNnpcIixmaWxsOlwiI0ZCQkMwNVwifSksYi5hLmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2Q6XCJNOSAxOGMyLjQzIDAgNC40Ny0uOCA1Ljk2LTIuMThsLTIuODQtMi4yYy0uNzYuNTMtMS43OC45LTMuMTIuOS0yLjM4IDAtNC40LTEuNTctNS4xMi0zLjc0TC45NyAxMy4wNEMyLjQ1IDE1Ljk4IDUuNDggMTggOSAxOHpcIixmaWxsOlwiIzM0QTg1M1wifSksYi5hLmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIse2ZpbGw6XCJub25lXCIsZDpcIk0wIDBoMTh2MThIMHpcIn0pKSkpfWZ1bmN0aW9uIHkoZSl7dmFyIHQ9aShPYmplY3QobS51c2VTdGF0ZSkoITEpLDIpLG49dFswXSxvPXRbMV0scj1pKE9iamVjdChtLnVzZVN0YXRlKSghMSksMiksYT1yWzBdLGM9clsxXSx1PWUudGFnLGw9ZS50eXBlLHM9ZS5jbGFzc05hbWUsZj1lLmRpc2FibGVkU3R5bGUsZD1lLmJ1dHRvblRleHQseT1lLmNoaWxkcmVuLHY9ZS5yZW5kZXIsUz1lLnRoZW1lLGo9ZS5pY29uLE89ZS5kaXNhYmxlZCx4PWgoe29uU3VjY2VzczplLm9uU3VjY2VzcyxvbkF1dG9Mb2FkRmluaXNoZWQ6ZS5vbkF1dG9Mb2FkRmluaXNoZWQsb25SZXF1ZXN0OmUub25SZXF1ZXN0LG9uRmFpbHVyZTplLm9uRmFpbHVyZSxvblNjcmlwdExvYWRGYWlsdXJlOmUub25TY3JpcHRMb2FkRmFpbHVyZSxjbGllbnRJZDplLmNsaWVudElkLGNvb2tpZVBvbGljeTplLmNvb2tpZVBvbGljeSxsb2dpbkhpbnQ6ZS5sb2dpbkhpbnQsaG9zdGVkRG9tYWluOmUuaG9zdGVkRG9tYWluLGF1dG9Mb2FkOmUuYXV0b0xvYWQsaXNTaWduZWRJbjplLmlzU2lnbmVkSW4sZmV0Y2hCYXNpY1Byb2ZpbGU6ZS5mZXRjaEJhc2ljUHJvZmlsZSxyZWRpcmVjdFVyaTplLnJlZGlyZWN0VXJpLGRpc2NvdmVyeURvY3M6ZS5kaXNjb3ZlcnlEb2NzLHV4TW9kZTplLnV4TW9kZSxzY29wZTplLnNjb3BlLGFjY2Vzc1R5cGU6ZS5hY2Nlc3NUeXBlLHJlc3BvbnNlVHlwZTplLnJlc3BvbnNlVHlwZSxqc1NyYzplLmpzU3JjLHByb21wdDplLnByb21wdH0pLEk9eC5zaWduSW4sdz1PfHwheC5sb2FkZWQ7aWYodilyZXR1cm4gdih7b25DbGljazpJLGRpc2FibGVkOnd9KTt2YXIgaz17YmFja2dyb3VuZENvbG9yOlwiZGFya1wiPT09Uz9cInJnYig2NiwgMTMzLCAyNDQpXCI6XCIjZmZmXCIsZGlzcGxheTpcImlubGluZS1mbGV4XCIsYWxpZ25JdGVtczpcImNlbnRlclwiLGNvbG9yOlwiZGFya1wiPT09Uz9cIiNmZmZcIjpcInJnYmEoMCwgMCwgMCwgLjU0KVwiLGJveFNoYWRvdzpcIjAgMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgLjI0KSwgMCAwIDFweCAwIHJnYmEoMCwgMCwgMCwgLjI0KVwiLHBhZGRpbmc6MCxib3JkZXJSYWRpdXM6Mixib3JkZXI6XCIxcHggc29saWQgdHJhbnNwYXJlbnRcIixmb250U2l6ZToxNCxmb250V2VpZ2h0OlwiNTAwXCIsZm9udEZhbWlseTpcIlJvYm90bywgc2Fucy1zZXJpZlwifSxBPXtjdXJzb3I6XCJwb2ludGVyXCIsYmFja2dyb3VuZENvbG9yOlwiZGFya1wiPT09Uz9cIiMzMzY3RDZcIjpcIiNlZWVcIixjb2xvcjpcImRhcmtcIj09PVM/XCIjZmZmXCI6XCJyZ2JhKDAsIDAsIDAsIC41NClcIixvcGFjaXR5OjF9LF89dz9PYmplY3QuYXNzaWduKHt9LGssZik6YT9PYmplY3QuYXNzaWduKHt9LGssQSk6bj9PYmplY3QuYXNzaWduKHt9LGsse2N1cnNvcjpcInBvaW50ZXJcIixvcGFjaXR5Oi45fSk6aztyZXR1cm4gYi5hLmNyZWF0ZUVsZW1lbnQodSx7b25Nb3VzZUVudGVyOmZ1bmN0aW9uKCl7cmV0dXJuIG8oITApfSxvbk1vdXNlTGVhdmU6ZnVuY3Rpb24oKXtvKCExKSxjKCExKX0sb25Nb3VzZURvd246ZnVuY3Rpb24oKXtyZXR1cm4gYyghMCl9LG9uTW91c2VVcDpmdW5jdGlvbigpe3JldHVybiBjKCExKX0sb25DbGljazpJLHN0eWxlOl8sdHlwZTpsLGRpc2FibGVkOncsY2xhc3NOYW1lOnN9LFtqJiZiLmEuY3JlYXRlRWxlbWVudChnLHtrZXk6MSxhY3RpdmU6YX0pLGIuYS5jcmVhdGVFbGVtZW50KHAse2ljb246aixrZXk6Mn0seXx8ZCldKX1uLnIodCksbi5kKHQsXCJkZWZhdWx0XCIsKGZ1bmN0aW9uKCl7cmV0dXJuIFN9KSksbi5kKHQsXCJHb29nbGVMb2dpblwiLChmdW5jdGlvbigpe3JldHVybiBTfSkpLG4uZCh0LFwiR29vZ2xlTG9nb3V0XCIsKGZ1bmN0aW9uKCl7cmV0dXJuIE99KSksbi5kKHQsXCJ1c2VHb29nbGVMb2dpblwiLChmdW5jdGlvbigpe3JldHVybiBofSkpLG4uZCh0LFwidXNlR29vZ2xlTG9nb3V0XCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGp9KSk7dmFyIG09bigwKSxiPW4ubihtKSxoPShuKDEpLGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSl7dmFyIHQ9ZS5nZXRCYXNpY1Byb2ZpbGUoKSxuPWUuZ2V0QXV0aFJlc3BvbnNlKCEwKTtlLmdvb2dsZUlkPXQuZ2V0SWQoKSxlLnRva2VuT2JqPW4sZS50b2tlbklkPW4uaWRfdG9rZW4sZS5hY2Nlc3NUb2tlbj1uLmFjY2Vzc190b2tlbixlLnByb2ZpbGVPYmo9e2dvb2dsZUlkOnQuZ2V0SWQoKSxpbWFnZVVybDp0LmdldEltYWdlVXJsKCksZW1haWw6dC5nZXRFbWFpbCgpLG5hbWU6dC5nZXROYW1lKCksZ2l2ZW5OYW1lOnQuZ2V0R2l2ZW5OYW1lKCksZmFtaWx5TmFtZTp0LmdldEZhbWlseU5hbWUoKX0saShlKX1mdW5jdGlvbiBuKGUpe2lmKGUmJmUucHJldmVudERlZmF1bHQoKSxQKXt2YXIgbj13aW5kb3cuZ2FwaS5hdXRoMi5nZXRBdXRoSW5zdGFuY2UoKSxvPXtwcm9tcHQ6TH07cCgpLFwiY29kZVwiPT09Xz9uLmdyYW50T2ZmbGluZUFjY2VzcyhvKS50aGVuKChmdW5jdGlvbihlKXtyZXR1cm4gaShlKX0pLChmdW5jdGlvbihlKXtyZXR1cm4gbChlKX0pKTpuLnNpZ25JbihvKS50aGVuKChmdW5jdGlvbihlKXtyZXR1cm4gdChlKX0pLChmdW5jdGlvbihlKXtyZXR1cm4gbChlKX0pKX19dmFyIHI9ZS5vblN1Y2Nlc3MsaT12b2lkIDA9PT1yP2Z1bmN0aW9uKCl7fTpyLGE9ZS5vbkF1dG9Mb2FkRmluaXNoZWQsYz12b2lkIDA9PT1hP2Z1bmN0aW9uKCl7fTphLHU9ZS5vbkZhaWx1cmUsbD12b2lkIDA9PT11P2Z1bmN0aW9uKCl7fTp1LHM9ZS5vblJlcXVlc3QscD12b2lkIDA9PT1zP2Z1bmN0aW9uKCl7fTpzLGc9ZS5vblNjcmlwdExvYWRGYWlsdXJlLHk9ZS5jbGllbnRJZCxiPWUuY29va2llUG9saWN5LGg9ZS5sb2dpbkhpbnQsdj1lLmhvc3RlZERvbWFpbixTPWUuYXV0b0xvYWQsaj1lLmlzU2lnbmVkSW4sTz1lLmZldGNoQmFzaWNQcm9maWxlLHg9ZS5yZWRpcmVjdFVyaSxJPWUuZGlzY292ZXJ5RG9jcyx3PWUudXhNb2RlLGs9ZS5zY29wZSxBPWUuYWNjZXNzVHlwZSxfPWUucmVzcG9uc2VUeXBlLEU9ZS5qc1NyYyxUPXZvaWQgMD09PUU/XCJodHRwczovL2FwaXMuZ29vZ2xlLmNvbS9qcy9hcGkuanNcIjpFLEw9ZS5wcm9tcHQsTT1vKE9iamVjdChtLnVzZVN0YXRlKSghMSksMiksUD1NWzBdLEM9TVsxXTtyZXR1cm4gT2JqZWN0KG0udXNlRWZmZWN0KSgoZnVuY3Rpb24oKXt2YXIgZT0hMSxuPWd8fGw7cmV0dXJuIGYoZG9jdW1lbnQsXCJzY3JpcHRcIixcImdvb2dsZS1sb2dpblwiLFQsKGZ1bmN0aW9uKCl7dmFyIG89e2NsaWVudF9pZDp5LGNvb2tpZV9wb2xpY3k6Yixsb2dpbl9oaW50OmgsaG9zdGVkX2RvbWFpbjp2LGZldGNoX2Jhc2ljX3Byb2ZpbGU6TyxkaXNjb3ZlcnlEb2NzOkksdXhfbW9kZTp3LHJlZGlyZWN0X3VyaTp4LHNjb3BlOmssYWNjZXNzX3R5cGU6QX07XCJjb2RlXCI9PT1fJiYoby5hY2Nlc3NfdHlwZT1cIm9mZmxpbmVcIiksd2luZG93LmdhcGkubG9hZChcImF1dGgyXCIsKGZ1bmN0aW9uKCl7dmFyIHI9d2luZG93LmdhcGkuYXV0aDIuZ2V0QXV0aEluc3RhbmNlKCk7cj9yLnRoZW4oKGZ1bmN0aW9uKCl7ZXx8KGomJnIuaXNTaWduZWRJbi5nZXQoKT8oQyghMCksYyghMCksdChyLmN1cnJlbnRVc2VyLmdldCgpKSk6KEMoITApLGMoITEpKSl9KSwoZnVuY3Rpb24oZSl7bChlKX0pKTp3aW5kb3cuZ2FwaS5hdXRoMi5pbml0KG8pLnRoZW4oKGZ1bmN0aW9uKG4pe2lmKCFlKXtDKCEwKTt2YXIgbz1qJiZuLmlzU2lnbmVkSW4uZ2V0KCk7YyhvKSxvJiZ0KG4uY3VycmVudFVzZXIuZ2V0KCkpfX0pLChmdW5jdGlvbihlKXtDKCEwKSxjKCExKSxuKGUpfSkpfSkpfSksKGZ1bmN0aW9uKGUpe24oZSl9KSksZnVuY3Rpb24oKXtlPSEwLGQoZG9jdW1lbnQsXCJnb29nbGUtbG9naW5cIil9fSksW10pLE9iamVjdChtLnVzZUVmZmVjdCkoKGZ1bmN0aW9uKCl7UyYmbigpfSksW1BdKSx7c2lnbkluOm4sbG9hZGVkOlB9fSk7ZnVuY3Rpb24gdihlKXt2YXIgdD1sKE9iamVjdChtLnVzZVN0YXRlKSghMSksMiksbj10WzBdLG89dFsxXSxyPWwoT2JqZWN0KG0udXNlU3RhdGUpKCExKSwyKSxpPXJbMF0sYT1yWzFdLGM9ZS50YWcsdT1lLnR5cGUscz1lLmNsYXNzTmFtZSxmPWUuZGlzYWJsZWRTdHlsZSxkPWUuYnV0dG9uVGV4dCx5PWUuY2hpbGRyZW4saD1lLnJlbmRlcix2PWUudGhlbWUsUz1lLmljb24sTz1lLmRpc2FibGVkLHg9aih7anNTcmM6ZS5qc1NyYyxvbkZhaWx1cmU6ZS5vbkZhaWx1cmUsb25TY3JpcHRMb2FkRmFpbHVyZTplLm9uU2NyaXB0TG9hZEZhaWx1cmUsY2xpZW50SWQ6ZS5jbGllbnRJZCxjb29raWVQb2xpY3k6ZS5jb29raWVQb2xpY3ksbG9naW5IaW50OmUubG9naW5IaW50LGhvc3RlZERvbWFpbjplLmhvc3RlZERvbWFpbixmZXRjaEJhc2ljUHJvZmlsZTplLmZldGNoQmFzaWNQcm9maWxlLGRpc2NvdmVyeURvY3M6ZS5kaXNjb3ZlcnlEb2NzLHV4TW9kZTplLnV4TW9kZSxyZWRpcmVjdFVyaTplLnJlZGlyZWN0VXJpLHNjb3BlOmUuc2NvcGUsYWNjZXNzVHlwZTplLmFjY2Vzc1R5cGUsb25Mb2dvdXRTdWNjZXNzOmUub25Mb2dvdXRTdWNjZXNzfSksST14LnNpZ25PdXQsdz1PfHwheC5sb2FkZWQ7aWYoaClyZXR1cm4gaCh7b25DbGljazpJLGRpc2FibGVkOnd9KTt2YXIgaz17YmFja2dyb3VuZENvbG9yOlwiZGFya1wiPT09dj9cInJnYig2NiwgMTMzLCAyNDQpXCI6XCIjZmZmXCIsZGlzcGxheTpcImlubGluZS1mbGV4XCIsYWxpZ25JdGVtczpcImNlbnRlclwiLGNvbG9yOlwiZGFya1wiPT09dj9cIiNmZmZcIjpcInJnYmEoMCwgMCwgMCwgLjU0KVwiLGJveFNoYWRvdzpcIjAgMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgLjI0KSwgMCAwIDFweCAwIHJnYmEoMCwgMCwgMCwgLjI0KVwiLHBhZGRpbmc6MCxib3JkZXJSYWRpdXM6Mixib3JkZXI6XCIxcHggc29saWQgdHJhbnNwYXJlbnRcIixmb250U2l6ZToxNCxmb250V2VpZ2h0OlwiNTAwXCIsZm9udEZhbWlseTpcIlJvYm90bywgc2Fucy1zZXJpZlwifSxBPXtjdXJzb3I6XCJwb2ludGVyXCIsYmFja2dyb3VuZENvbG9yOlwiZGFya1wiPT09dj9cIiMzMzY3RDZcIjpcIiNlZWVcIixjb2xvcjpcImRhcmtcIj09PXY/XCIjZmZmXCI6XCJyZ2JhKDAsIDAsIDAsIC41NClcIixvcGFjaXR5OjF9LF89dz9PYmplY3QuYXNzaWduKHt9LGssZik6aT9PYmplY3QuYXNzaWduKHt9LGssQSk6bj9PYmplY3QuYXNzaWduKHt9LGsse2N1cnNvcjpcInBvaW50ZXJcIixvcGFjaXR5Oi45fSk6aztyZXR1cm4gYi5hLmNyZWF0ZUVsZW1lbnQoYyx7b25Nb3VzZUVudGVyOmZ1bmN0aW9uKCl7cmV0dXJuIG8oITApfSxvbk1vdXNlTGVhdmU6ZnVuY3Rpb24oKXtvKCExKSxhKCExKX0sb25Nb3VzZURvd246ZnVuY3Rpb24oKXtyZXR1cm4gYSghMCl9LG9uTW91c2VVcDpmdW5jdGlvbigpe3JldHVybiBhKCExKX0sb25DbGljazpJLHN0eWxlOl8sdHlwZTp1LGRpc2FibGVkOncsY2xhc3NOYW1lOnN9LFtTJiZiLmEuY3JlYXRlRWxlbWVudChnLHtrZXk6MSxhY3RpdmU6aX0pLGIuYS5jcmVhdGVFbGVtZW50KHAse2ljb246UyxrZXk6Mn0seXx8ZCldKX15LmRlZmF1bHRQcm9wcz17dHlwZTpcImJ1dHRvblwiLHRhZzpcImJ1dHRvblwiLGJ1dHRvblRleHQ6XCJTaWduIGluIHdpdGggR29vZ2xlXCIsc2NvcGU6XCJwcm9maWxlIGVtYWlsXCIsYWNjZXNzVHlwZTpcIm9ubGluZVwiLHByb21wdDpcIlwiLGNvb2tpZVBvbGljeTpcInNpbmdsZV9ob3N0X29yaWdpblwiLGZldGNoQmFzaWNQcm9maWxlOiEwLGlzU2lnbmVkSW46ITEsdXhNb2RlOlwicG9wdXBcIixkaXNhYmxlZFN0eWxlOntvcGFjaXR5Oi42fSxpY29uOiEwLHRoZW1lOlwibGlnaHRcIixvblJlcXVlc3Q6ZnVuY3Rpb24oKXt9fTt2YXIgUz15LGo9ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5qc1NyYyxuPXZvaWQgMD09PXQ/XCJodHRwczovL2FwaXMuZ29vZ2xlLmNvbS9qcy9hcGkuanNcIjp0LG89ZS5vbkZhaWx1cmUscj1lLm9uU2NyaXB0TG9hZEZhaWx1cmUsaT1lLmNsaWVudElkLGE9ZS5jb29raWVQb2xpY3ksdT1lLmxvZ2luSGludCxsPWUuaG9zdGVkRG9tYWluLHM9ZS5mZXRjaEJhc2ljUHJvZmlsZSxwPWUuZGlzY292ZXJ5RG9jcyxnPWUudXhNb2RlLHk9ZS5yZWRpcmVjdFVyaSxiPWUuc2NvcGUsaD1lLmFjY2Vzc1R5cGUsdj1lLm9uTG9nb3V0U3VjY2VzcyxTPWMoT2JqZWN0KG0udXNlU3RhdGUpKCExKSwyKSxqPVNbMF0sTz1TWzFdLHg9T2JqZWN0KG0udXNlQ2FsbGJhY2spKChmdW5jdGlvbigpe2lmKHdpbmRvdy5nYXBpKXt2YXIgZT13aW5kb3cuZ2FwaS5hdXRoMi5nZXRBdXRoSW5zdGFuY2UoKTtudWxsIT1lJiZlLnRoZW4oKGZ1bmN0aW9uKCl7ZS5zaWduT3V0KCkudGhlbigoZnVuY3Rpb24oKXtlLmRpc2Nvbm5lY3QoKSx2KCl9KSl9KSwoZnVuY3Rpb24oZSl7cmV0dXJuIG8oZSl9KSl9fSksW3ZdKTtyZXR1cm4gT2JqZWN0KG0udXNlRWZmZWN0KSgoZnVuY3Rpb24oKXt2YXIgZT1yfHxvO3JldHVybiBmKGRvY3VtZW50LFwic2NyaXB0XCIsXCJnb29nbGUtbG9naW5cIixuLChmdW5jdGlvbigpe3ZhciB0PXtjbGllbnRfaWQ6aSxjb29raWVfcG9saWN5OmEsbG9naW5faGludDp1LGhvc3RlZF9kb21haW46bCxmZXRjaF9iYXNpY19wcm9maWxlOnMsZGlzY292ZXJ5RG9jczpwLHV4X21vZGU6ZyxyZWRpcmVjdF91cmk6eSxzY29wZTpiLGFjY2Vzc190eXBlOmh9O3dpbmRvdy5nYXBpLmxvYWQoXCJhdXRoMlwiLChmdW5jdGlvbigpe3dpbmRvdy5nYXBpLmF1dGgyLmdldEF1dGhJbnN0YW5jZSgpP08oITApOndpbmRvdy5nYXBpLmF1dGgyLmluaXQodCkudGhlbigoZnVuY3Rpb24oKXtyZXR1cm4gTyghMCl9KSwoZnVuY3Rpb24odCl7cmV0dXJuIGUodCl9KSl9KSl9KSwoZnVuY3Rpb24odCl7ZSh0KX0pKSxmdW5jdGlvbigpe2QoZG9jdW1lbnQsXCJnb29nbGUtbG9naW5cIil9fSksW10pLHtzaWduT3V0OngsbG9hZGVkOmp9fTt2LmRlZmF1bHRQcm9wcz17dHlwZTpcImJ1dHRvblwiLHRhZzpcImJ1dHRvblwiLGJ1dHRvblRleHQ6XCJMb2dvdXQgb2YgR29vZ2xlXCIsZGlzYWJsZWRTdHlsZTp7b3BhY2l0eTouNn0saWNvbjohMCx0aGVtZTpcImxpZ2h0XCIsanNTcmM6XCJodHRwczovL2FwaXMuZ29vZ2xlLmNvbS9qcy9hcGkuanNcIn07dmFyIE89dn1dLHQuYz1vLHQuZD1mdW5jdGlvbihlLG4sbyl7dC5vKGUsbil8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLG4se2VudW1lcmFibGU6ITAsZ2V0Om99KX0sdC5yPWZ1bmN0aW9uKGUpe1widW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJlN5bWJvbC50b1N0cmluZ1RhZyYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSl9LHQudD1mdW5jdGlvbihlLG4pe2lmKDEmbiYmKGU9dChlKSksOCZuKXJldHVybiBlO2lmKDQmbiYmXCJvYmplY3RcIj09dHlwZW9mIGUmJmUmJmUuX19lc01vZHVsZSlyZXR1cm4gZTt2YXIgbz1PYmplY3QuY3JlYXRlKG51bGwpO2lmKHQucihvKSxPYmplY3QuZGVmaW5lUHJvcGVydHkobyxcImRlZmF1bHRcIix7ZW51bWVyYWJsZTohMCx2YWx1ZTplfSksMiZuJiZcInN0cmluZ1wiIT10eXBlb2YgZSlmb3IodmFyIHIgaW4gZSl0LmQobyxyLGZ1bmN0aW9uKHQpe3JldHVybiBlW3RdfS5iaW5kKG51bGwscikpO3JldHVybiBvfSx0Lm49ZnVuY3Rpb24oZSl7dmFyIG49ZSYmZS5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIGUuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gZX07cmV0dXJuIHQuZChuLFwiYVwiLG4pLG59LHQubz1mdW5jdGlvbihlLHQpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KX0sdC5wPVwiXCIsdCh0LnM9NCk7ZnVuY3Rpb24gdChlKXtpZihvW2VdKXJldHVybiBvW2VdLmV4cG9ydHM7dmFyIHI9b1tlXT17aTplLGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIG5bZV0uY2FsbChyLmV4cG9ydHMscixyLmV4cG9ydHMsdCksci5sPSEwLHIuZXhwb3J0c312YXIgbixvfSkpOyJdLCJzb3VyY2VSb290IjoiIn0=